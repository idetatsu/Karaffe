import org.apache.tools.ant.filters.FixCrLfFilter

plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.2'
    id 'java'
    id 'groovy'
    id 'antlr'
}

group 'net.nokok'
version '1.0-SNAPSHOT'

tasks.withType(AbstractCompile)*.options*.encoding = tasks.withType(GroovyCompile)*.groovyOptions*.encoding = 'UTF-8'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile group: 'net.nokok', name: 'azm', version: '0.1.6'
    compile group: 'args4j', name: 'args4j', version: '2.33'
    antlr "org.antlr:antlr4:4.7.1"
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

test {
    testLogging {
        events 'passed', 'failed', 'skipped'
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint"
    }
}

generateGrammarSource {
    arguments += [
            '-Xlog',
            '-long-messages',
            '-visitor',
            '-listener',
            '-package', 'org.karaffe.compiler.frontend.karaffe.antlr'
    ]
    outputDirectory = file("${projectDir}/build/tmp_antlr")
}

task filter(type: Copy, dependsOn: generateGrammarSource) {
    from file("${projectDir}/build/tmp_antlr")
    into file("${projectDir}/src/main/java/org/karaffe/compiler/frontend/karaffe/antlr")
    filter(FixCrLfFilter, eol:FixCrLfFilter.CrLf.newInstance("lf"))
}

compileJava.dependsOn filter